// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String
    image    String
    products Product[]
}

model Product {
    id          Int         @id @default(autoincrement())
    name        String      @unique
    description String
    price       Float
    image       String
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
    category    Category    @relation(fields: [categoryId], references: [id])
    categoryId  Int
    CartItems   CartItems?
    OrderItems  OrderItems?
}

model User {
    id        String      @id @default(uuid())
    firstName String
    createdAt DateTime    @default(now())
    updatedAt DateTime    @updatedAt
    CartItems CartItems[]
    orders    Orders[]
}

model CartItems {
    id        String   @id @default(uuid())
    count     Int      @default(1)
    product   Product  @relation(fields: [productId], references: [id])
    productId Int      @unique
    user      User     @relation(fields: [userId], references: [id])
    userId    String   @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Orders {
    id              String       @id @default(uuid())
    customerName    String
    amount          Float
    shippingFees    Float
    discountAmt     Int          @default(0)
    finalAmount     Int
    shippingAddress String
    paid            Int          @default(0)
    userId          String       @unique
    createdAt       DateTime     @default(now())
    updatedAt       DateTime     @updatedAt
    OrderItems      OrderItems[]
    User            User         @relation(fields: [userId], references: [id])
}

model OrderItems {
    id        String   @id @default(uuid())
    count     Int      @default(1)
    order     Orders   @relation(fields: [orderId], references: [id])
    product   Product  @relation(fields: [productId], references: [id])
    orderId   String   @unique
    productId Int      @unique
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
